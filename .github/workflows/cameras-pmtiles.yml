name: Build & Publish Cameras PMTiles

on:
  workflow_dispatch: {}          # enables the "Run workflow" button
  schedule:
    - cron: "17 6 * * *"        # nightly at 06:17 UTC
  push:                          # also runs when these paths change on main
    branches: [ main ]
    paths:
      - 'data/**'
      - 'scripts/**'
      - '.github/workflows/cameras-pmtiles.yml'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      # 1) normalize to data/cameras.geojson (ensures each feature has 'dir')
      - name: Transform -> cameras.geojson (from sample/raw feed)
        run: |
          node scripts/transform_cameras.mjs
          ls -lh data/cameras.geojson

      # 2) install tippecanoe and fetch the pmtiles CLI binary
      - name: Install tippecanoe & pmtiles CLI
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y tippecanoe
          ARCH="$(uname -m)"
          if [ "$ARCH" = "x86_64" ]; then
            URL="https://github.com/protomaps/PMTiles/releases/latest/download/pmtiles-linux-x86_64"
          elif [ "$ARCH" = "aarch64" ]; then
            URL="https://github.com/protomaps/PMTiles/releases/latest/download/pmtiles-linux-aarch64"
          else
            echo "Unsupported architecture: $ARCH" && exit 1
          fi
          sudo curl -L -o /usr/local/bin/pmtiles "$URL"
          sudo chmod +x /usr/local/bin/pmtiles
          pmtiles --help

      # 3) build vector tiles (MBTiles) with a stable layer name "cameras"
      - name: Build MBTiles (layer name "cameras")
        run: |
          tippecanoe -o data/cameras.mbtiles \
            -zg -l cameras \
            --drop-densest-as-needed --coalesce-densest-as-needed \
            --no-feature-limit --no-tile-size-limit \
            -y dir -y id -y type -y last_seen \
            data/cameras.geojson
          ls -lh data/cameras.mbtiles

      # 4) convert MBTiles -> PMTiles
      - name: Convert to PMTiles
        run: |
          pmtiles convert data/cameras.mbtiles cameras.pmtiles
          ls -lh cameras.pmtiles

      # 5) publish PMTiles to the gh-pages branch at /tiles/cameras.pmtiles
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: site
          fetch-depth: 0

      - name: Publish to gh-pages/tiles/
        run: |
          set -e
          mkdir -p site/tiles
          cp -f cameras.pmtiles site/tiles/cameras.pmtiles
          cd site
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add tiles/cameras.pmtiles
          git commit -m "Update cameras.pmtiles $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "No changes"
          git push

